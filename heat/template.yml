heat_template_version: 2016-04-08

parameters:
  server_image:
    description: ID or name of the glance image to boot from
    type: string
  ssh_key:
    description: ID or name of your ssh key. Must exist in your OpenStack account.
    type: string
  provider_network:
    description: ID or name of the external network
    type: string
  ipv6_subnetpool:
    description: ID or name of the subnet pool where you will get your public IPv6 subnet from
    type: string
  availability_zone:
    description: Availability Zone to spawn server in
    type: string

resources:
  dualstack_net:
    type: OS::Neutron::Net
    properties:
      name: heat_dualstack_net_ubuntu

  ipv4_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: heat_ipv4_subnet_ubuntu
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network_id: { get_resource: dualstack_net }
      enable_dhcp: true
      ip_version: 4
      cidr: 10.100.0.0/16

  ipv6_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: heat_ipv6_subnet_ubuntu
      dns_nameservers:
        - 2001:4860:4860::8888
        - 2001:4860:4860::8844
      network_id: { get_resource: dualstack_net }
      enable_dhcp: true
      ip_version: 6
      ipv6_address_mode: dhcpv6-stateful
      ipv6_ra_mode: dhcpv6-stateful
      prefixlen: 64
      subnetpool:  { get_param: ipv6_subnetpool }

  dualstack_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { "network": { get_param: provider_network } }
      name: heat_dualstack_router_ubuntu

  ipv4_router_interface:
    type: OS::Neutron::RouterInterface
    depends_on: ipv4_subnet
    properties:
      router_id: { get_resource: dualstack_router }
      subnet: { get_resource: ipv4_subnet }

  ipv6_router_interface:
    type: OS::Neutron::RouterInterface
    depends_on: ipv6_subnet
    properties:
      router_id: { get_resource: dualstack_router }
      subnet: { get_resource: ipv6_subnet }

  secgrp:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming ssh and icmp traffic from anywhere.
      name: heat_dualstack_icmp_ssh_ubuntu
      rules:
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp, ethertype: IPv4 }
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 80, port_range_max: 80, protocol: tcp, ethertype: IPv4 }
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 443, port_range_max: 443, protocol: tcp, ethertype: IPv4 }
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp, ethertype: IPv4 }
        - { direction: ingress, remote_ip_prefix: "::/0", port_range_min: 22, port_range_max: 22, protocol: tcp, ethertype: IPv6 }
        - { direction: ingress, remote_ip_prefix: "::/0", port_range_min: 80, port_range_max: 80, protocol: tcp, ethertype: IPv6 }
        - { direction: ingress, remote_ip_prefix: "::/0", port_range_min: 443, port_range_max: 443, protocol: tcp, ethertype: IPv6 }
        - { direction: ingress, remote_ip_prefix: "::/0", protocol: ipv6-icmp, ethertype: IPv6 }

  dualstack_server:
    type: OS::Nova::Server
    depends_on:
      - ipv4_subnet
      - ipv6_subnet
    properties:
      image: { get_param: server_image }
      availability_zone: { get_param: availability_zone }
      flavor: win.medium
      name: heat_dualstack_ubuntu
      key_name: { get_param: ssh_key }
      security_groups:
        - { get_resource: secgrp }
      networks:
        - network: { get_resource: dualstack_net }
      user_data_format: RAW
      user_data: { get_resource: cloud_init_ipv6 }

  cloud_init_ipv6:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /etc/dhcp/dhclient6.conf
          content: "timeout 30;"
        - path: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
          content: "network: {config: disabled}"
        - path: /etc/network/interfaces.d/lo.cfg
          content: |
              auto lo
              iface lo inet loopback
        - path: /etc/network/interfaces.d/ens3.cfg
          content: |
              iface ens3 inet6 auto
                  up sleep 5
                  up dhclient -1 -6 -cf /etc/dhcp/dhclient6.conf -lf /var/lib/dhcp/dhclient6.ens3.leases -v ens3 || true
        runcmd:
          - [ ifdown, ens3]
          - [ ifup, ens3]
